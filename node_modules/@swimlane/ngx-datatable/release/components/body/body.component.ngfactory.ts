/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/components/body/body.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../../../src/components/body/progress-bar.component';
import * as import11 from './progress-bar.component.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../../../src/components/body/body-row-wrapper.component';
import * as import14 from '../../../node_modules/@angular/common/src/directives/ng_style.ngfactory';
import * as import15 from './body-row-wrapper.component.ngfactory';
import * as import16 from '../../../../src/components/body/body-row.component';
import * as import17 from './body-row.component.ngfactory';
import * as import18 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '@angular/common/src/directives/ng_style';
import * as import21 from '../../../../src/components/body/scroller.component';
import * as import22 from './scroller.component.ngfactory';
import * as import23 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import24 from '@angular/core/src/linker/template_ref';
import * as import25 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import26 from '@angular/common/src/directives/ng_for';
import * as import27 from '@angular/core/src/linker/query_list';
import * as import28 from '../../../../src/components/body/selection.component';
import * as import29 from './selection.component.ngfactory';
import * as import30 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import31 from '@angular/common/src/directives/ng_if';
export class Wrapper_DataTableBodyComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DataTableBodyComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  subscription5:any;
  constructor() {
    this._changed = false;
    this.context = new import0.DataTableBodyComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
    this._expr_11 = import1.UNINITIALIZED;
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
    this._expr_15 = import1.UNINITIALIZED;
    this._expr_16 = import1.UNINITIALIZED;
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
    (this.subscription5 && this.subscription5.unsubscribe());
  }
  check_scrollbarV(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.scrollbarV = currValue;
      this._expr_0 = currValue;
    }
  }
  check_scrollbarH(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.scrollbarH = currValue;
      this._expr_1 = currValue;
    }
  }
  check_loadingIndicator(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.loadingIndicator = currValue;
      this._expr_2 = currValue;
    }
  }
  check_rowHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.rowHeight = currValue;
      this._expr_3 = currValue;
    }
  }
  check_offsetX(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.offsetX = currValue;
      this._expr_4 = currValue;
    }
  }
  check_emptyMessage(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.emptyMessage = currValue;
      this._expr_5 = currValue;
    }
  }
  check_selectionType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.selectionType = currValue;
      this._expr_6 = currValue;
    }
  }
  check_selected(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.selected = currValue;
      this._expr_7 = currValue;
    }
  }
  check_rowIdentity(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.rowIdentity = currValue;
      this._expr_8 = currValue;
    }
  }
  check_rowDetail(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.rowDetail = currValue;
      this._expr_9 = currValue;
    }
  }
  check_selectCheck(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this._changed = true;
      this.context.selectCheck = currValue;
      this._expr_10 = currValue;
    }
  }
  check_trackByProp(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_11,currValue))) {
      this._changed = true;
      this.context.trackByProp = currValue;
      this._expr_11 = currValue;
    }
  }
  check_pageSize(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_12,currValue))) {
      this._changed = true;
      this.context.pageSize = currValue;
      this._expr_12 = currValue;
    }
  }
  check_rows(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_13,currValue))) {
      this._changed = true;
      this.context.rows = currValue;
      this._expr_13 = currValue;
    }
  }
  check_columns(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_14,currValue))) {
      this._changed = true;
      this.context.columns = currValue;
      this._expr_14 = currValue;
    }
  }
  check_offset(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_15,currValue))) {
      this._changed = true;
      this.context.offset = currValue;
      this._expr_15 = currValue;
    }
  }
  check_rowCount(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_16,currValue))) {
      this._changed = true;
      this.context.rowCount = currValue;
      this._expr_16 = currValue;
    }
  }
  check_innerWidth(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_17,currValue))) {
      this._changed = true;
      this.context.innerWidth = currValue;
      this._expr_17 = currValue;
    }
  }
  check_bodyHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_18,currValue))) {
      this._changed = true;
      this.context.bodyHeight = currValue;
      this._expr_18 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_19:any = this.context.bodyWidth;
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      view.renderer.setElementStyle(el,'width',((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_19) == null)? (null as any): view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_19).toString()));
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.context.bodyHeight;
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      view.renderer.setElementStyle(el,'height',((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_20) == null)? (null as any): view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_20).toString()));
      this._expr_20 = currVal_20;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean,emit5:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.scroll.subscribe(_eventHandler.bind(view,'scroll'))); }
    if (emit1) { (this.subscription1 = this.context.page.subscribe(_eventHandler.bind(view,'page'))); }
    if (emit2) { (this.subscription2 = this.context.activate.subscribe(_eventHandler.bind(view,'activate'))); }
    if (emit3) { (this.subscription3 = this.context.select.subscribe(_eventHandler.bind(view,'select'))); }
    if (emit4) { (this.subscription4 = this.context.detailToggle.subscribe(_eventHandler.bind(view,'detailToggle'))); }
    if (emit5) { (this.subscription5 = this.context.rowContextmenu.subscribe(_eventHandler.bind(view,'rowContextmenu'))); }
  }
}
var renderType_DataTableBodyComponent_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_DataTableBodyComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.DataTableBodyComponent>;
  _DataTableBodyComponent_0_3:Wrapper_DataTableBodyComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DataTableBodyComponent_Host0,renderType_DataTableBodyComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'datatable-body',new import3.InlineArray2(2,'class','datatable-body'),rootSelector,(null as any));
    this.compView_0 = new View_DataTableBodyComponent0(this.viewUtils,this,0,this._el_0);
    this._DataTableBodyComponent_0_3 = new Wrapper_DataTableBodyComponent();
    this.compView_0.create(this._DataTableBodyComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._DataTableBodyComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DataTableBodyComponent) && (0 === requestNodeIndex))) { return this._DataTableBodyComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DataTableBodyComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._DataTableBodyComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DataTableBodyComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DataTableBodyComponentNgFactory:import9.ComponentFactory<import0.DataTableBodyComponent> = new import9.ComponentFactory<import0.DataTableBodyComponent>('datatable-body',View_DataTableBodyComponent_Host0,import0.DataTableBodyComponent);
const styles_DataTableBodyComponent:any[] = ([] as any[]);
class View_DataTableBodyComponent1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import10.ProgressBarComponent>;
  _ProgressBarComponent_0_3:import11.Wrapper_ProgressBarComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_DataTableBodyComponent1,renderType_DataTableBodyComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'datatable-progress',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import11.View_ProgressBarComponent0(this.viewUtils,this,0,this._el_0);
    this._ProgressBarComponent_0_3 = new import11.Wrapper_ProgressBarComponent();
    this._text_1 = this.renderer.createText((null as any),'\n      ',(null as any));
    this.compView_0.create(this._ProgressBarComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.ProgressBarComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._ProgressBarComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._ProgressBarComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_DataTableBodyComponent3 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import13.DataTableRowWrapperComponent>;
  _NgStyle_0_3:import14.Wrapper_NgStyle;
  _DataTableRowWrapperComponent_0_4:import15.Wrapper_DataTableRowWrapperComponent;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import16.DataTableBodyRowComponent>;
  _DataTableBodyRowComponent_2_3:import17.Wrapper_DataTableBodyRowComponent;
  _text_3:any;
  _text_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_DataTableBodyComponent3,renderType_DataTableBodyComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'datatable-row-wrapper',new import3.InlineArray2(2,'class','datatable-row-wrapper'),(null as any));
    this.compView_0 = new import15.View_DataTableRowWrapperComponent0(this.viewUtils,this,0,this._el_0);
    this._NgStyle_0_3 = new import14.Wrapper_NgStyle(this.parentView.parentView.parentView.injectorGet(import18.KeyValueDiffers,this.parentView.parentView.parentIndex),new import19.ElementRef(this._el_0),this.renderer);
    this._DataTableRowWrapperComponent_0_4 = new import15.Wrapper_DataTableRowWrapperComponent();
    this._text_1 = this.renderer.createText((null as any),'\n          ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,(null as any),'datatable-body-row',new import3.InlineArray4(4,'class','datatable-body-row','tabindex','-1'),(null as any));
    this.compView_2 = new import17.View_DataTableBodyRowComponent0(this.viewUtils,this,2,this._el_2);
    this._DataTableBodyRowComponent_2_3 = new import17.Wrapper_DataTableBodyRowComponent(new import19.ElementRef(this._el_2));
    this._text_3 = this.renderer.createText((null as any),'\n          ',(null as any));
    this.compView_2.create(this._DataTableBodyRowComponent_2_3.context);
    this._text_4 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.compView_0.create(this._DataTableRowWrapperComponent_0_4.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'rowContextmenu',(null as any),'contextmenu',(null as any)),this.eventHandler(this.handleEvent_0));
    this._DataTableRowWrapperComponent_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray4(4,'activate',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_2));
    this._DataTableBodyRowComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.DataTableBodyRowComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._DataTableBodyRowComponent_2_3.context; }
    if (((token === import20.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._NgStyle_0_3.context; }
    if (((token === import13.DataTableRowWrapperComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._DataTableRowWrapperComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.getRowsStyles(this.context.$implicit);
    this._NgStyle_0_3.check_ngStyle(currVal_0_0_0,throwOnChange,false);
    this._NgStyle_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.parentView.parentView.context.rowDetail;
    this._DataTableRowWrapperComponent_0_4.check_rowDetail(currVal_0_1_0,throwOnChange,false);
    const currVal_0_1_1:any = this.parentView.parentView.context.detailRowHeight;
    this._DataTableRowWrapperComponent_0_4.check_detailRowHeight(currVal_0_1_1,throwOnChange,false);
    const currVal_0_1_2:any = (this.context.$implicit.$$expanded === 1);
    this._DataTableRowWrapperComponent_0_4.check_expanded(currVal_0_1_2,throwOnChange,false);
    const currVal_0_1_3:any = this.context.$implicit;
    this._DataTableRowWrapperComponent_0_4.check_row(currVal_0_1_3,throwOnChange,false);
    this._DataTableRowWrapperComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = this.parentView.parentView.context.columns;
    this._DataTableBodyRowComponent_2_3.check_columns(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.innerWidth;
    this._DataTableBodyRowComponent_2_3.check_innerWidth(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = this.context.$implicit;
    this._DataTableBodyRowComponent_2_3.check_row(currVal_2_0_2,throwOnChange,false);
    const currVal_2_0_3:any = this.parentView.parentView.context.offsetX;
    this._DataTableBodyRowComponent_2_3.check_offsetX(currVal_2_0_3,throwOnChange,false);
    const currVal_2_0_4:any = this.parentView.parentView.context.rowHeight;
    this._DataTableBodyRowComponent_2_3.check_rowHeight(currVal_2_0_4,throwOnChange,false);
    const currVal_2_0_5:any = (<View_DataTableBodyComponent0>this.parentView.parentView)._DataTableSelectionComponent_1_3.context.getRowSelected(this.context.$implicit);
    this._DataTableBodyRowComponent_2_3.check_isSelected(currVal_2_0_5,throwOnChange,false);
    this._DataTableBodyRowComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this._DataTableBodyRowComponent_2_3.checkHost(this,this.compView_2,this._el_2,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this.compView_2.destroy();
    this._DataTableBodyRowComponent_2_3.ngOnDestroy();
    this._DataTableRowWrapperComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {
      cb(this._text_1,ctx);
      cb(this._el_2,ctx);
      cb(this._text_4,ctx);
    }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DataTableRowWrapperComponent_0_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'rowContextmenu')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.rowContextmenu.emit($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.compView_2.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DataTableBodyRowComponent_2_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'activate')) {
      const pd_sub_0:any = ((<any>(<View_DataTableBodyComponent0>this.parentView.parentView)._DataTableSelectionComponent_1_3.context.onActivate($event,this.context.index)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_DataTableBodyComponent2 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import21.ScrollerComponent>;
  _ScrollerComponent_0_3:import22.Wrapper_ScrollerComponent;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import12.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import23.Wrapper_NgFor;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_DataTableBodyComponent2,renderType_DataTableBodyComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'datatable-scroller',new import3.InlineArray2(2,'class','datatable-scroll'),(null as any));
    this.compView_0 = new import22.View_ScrollerComponent0(this.viewUtils,this,0,this._el_0);
    this._ScrollerComponent_0_3 = new import22.Wrapper_ScrollerComponent(new import19.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText((null as any),'\n        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_2 = new import12.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import24.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import23.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.parentView.injectorGet(import25.IterableDiffers,this.parentView.parentIndex),this.parentView.ref);
    this._text_3 = this.renderer.createText((null as any),'\n      ',(null as any));
    this.compView_0.create(this._ScrollerComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'scroll',(null as any)),this.eventHandler(this.handleEvent_0));
    this._ScrollerComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import26.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    if (((token === import21.ScrollerComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._ScrollerComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.scrollbarV;
    this._ScrollerComponent_0_3.check_scrollbarV(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context.scrollbarH;
    this._ScrollerComponent_0_3.check_scrollbarH(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.scrollHeight;
    this._ScrollerComponent_0_3.check_scrollHeight(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.columnGroupWidths.total;
    this._ScrollerComponent_0_3.check_scrollWidth(currVal_0_0_3,throwOnChange,false);
    this._ScrollerComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = this.parentView.context.temp;
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.context.rowTrackingFn;
    this._NgFor_2_6.check_ngForTrackBy(currVal_2_0_1,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._ScrollerComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_DataTableBodyComponent0>this.parentView)._viewQuery_ScrollerComponent_0.setDirty();
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this.compView_0.destroy();
    this._ScrollerComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {
      cb(this._text_1,ctx);
      cb(this._vc_2.nativeElement,ctx);
      this._vc_2.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_3,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_DataTableBodyComponent3(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'scroll')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onBodyScroll($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_DataTableBodyComponent4 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_DataTableBodyComponent4,renderType_DataTableBodyComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','empty-row'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = this.parentView.context.emptyMessage;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'innerHTML',this.viewUtils.sanitizer.sanitize(import4.SecurityContext.HTML,currVal_2));
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_DataTableBodyComponent:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,styles_DataTableBodyComponent,{});
export class View_DataTableBodyComponent0 extends import2.AppView<import0.DataTableBodyComponent> {
  _viewQuery_ScrollerComponent_0:import27.QueryList<any>;
  _text_0:any;
  _el_1:any;
  compView_1:import2.AppView<import28.DataTableSelectionComponent>;
  _DataTableSelectionComponent_1_3:import29.Wrapper_DataTableSelectionComponent;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import12.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import30.Wrapper_NgIf;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import12.ViewContainer;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import30.Wrapper_NgIf;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _vc_7:import12.ViewContainer;
  _TemplateRef_7_5:any;
  _NgIf_7_6:import30.Wrapper_NgIf;
  _text_8:any;
  _text_9:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DataTableBodyComponent0,renderType_DataTableBodyComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_ScrollerComponent_0 = new import27.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'datatable-selection',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_1 = new import29.View_DataTableSelectionComponent0(this.viewUtils,this,1,this._el_1);
    this._DataTableSelectionComponent_1_3 = new import29.Wrapper_DataTableSelectionComponent();
    this._text_2 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_3 = new import12.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import24.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import30.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_5 = new import12.ViewContainer(5,1,this,this._anchor_5);
    this._TemplateRef_5_5 = new import24.TemplateRef_(this,5,this._anchor_5);
    this._NgIf_5_6 = new import30.Wrapper_NgIf(this._vc_5.vcRef,this._TemplateRef_5_5);
    this._text_6 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_7 = new import12.ViewContainer(7,1,this,this._anchor_7);
    this._TemplateRef_7_5 = new import24.TemplateRef_(this,7,this._anchor_7);
    this._NgIf_7_6 = new import30.Wrapper_NgIf(this._vc_7.vcRef,this._TemplateRef_7_5);
    this._text_8 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.compView_1.create(this._DataTableSelectionComponent_1_3.context);
    this._text_9 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'select',(null as any),'activate',(null as any)),this.eventHandler(this.handleEvent_1));
    this._DataTableSelectionComponent_1_3.subscribe(this,this.eventHandler(this.handleEvent_1),true,true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._text_9
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import31.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import24.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import31.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    if (((token === import24.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import31.NgIf) && (7 === requestNodeIndex))) { return this._NgIf_7_6.context; }
    if (((token === import28.DataTableSelectionComponent) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._DataTableSelectionComponent_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.temp;
    this._DataTableSelectionComponent_1_3.check_rows(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = this.context.selected;
    this._DataTableSelectionComponent_1_3.check_selected(currVal_1_0_1,throwOnChange,false);
    const currVal_1_0_2:any = this.context.selectEnabled;
    this._DataTableSelectionComponent_1_3.check_selectEnabled(currVal_1_0_2,throwOnChange,false);
    const currVal_1_0_3:any = this.context.selectionType;
    this._DataTableSelectionComponent_1_3.check_selectionType(currVal_1_0_3,throwOnChange,false);
    const currVal_1_0_4:any = this.context.rowIdentity;
    this._DataTableSelectionComponent_1_3.check_rowIdentity(currVal_1_0_4,throwOnChange,false);
    const currVal_1_0_5:any = this.context.selectCheck;
    this._DataTableSelectionComponent_1_3.check_selectCheck(currVal_1_0_5,throwOnChange,false);
    this._DataTableSelectionComponent_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = this.context.loadingIndicator;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    const currVal_5_0_0:any = ((this.context.rows == null)? (null as any): this.context.rows.length);
    this._NgIf_5_6.check_ngIf(currVal_5_0_0,throwOnChange,false);
    this._NgIf_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    const currVal_7_0_0:boolean = !((this.context.rows == null)? (null as any): this.context.rows.length);
    this._NgIf_7_6.check_ngIf(currVal_7_0_0,throwOnChange,false);
    this._NgIf_7_6.ngDoCheck(this,this._anchor_7,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    this._vc_7.detectChangesInNestedViews(throwOnChange);
    this.compView_1.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if (this._viewQuery_ScrollerComponent_0.dirty) {
        this._viewQuery_ScrollerComponent_0.reset([this._vc_5.mapNestedViews(View_DataTableBodyComponent2,(nestedView:View_DataTableBodyComponent2):any => {
          return [nestedView._ScrollerComponent_0_3.context];
      })]);
      this.context.scroller = this._viewQuery_ScrollerComponent_0.first;
    } }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._vc_5.destroyNestedViews();
    this._vc_7.destroyNestedViews();
    this.compView_1.destroy();
    this._DataTableSelectionComponent_1_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {
      cb(this._text_2,ctx);
      cb(this._vc_3.nativeElement,ctx);
      this._vc_3.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_4,ctx);
      cb(this._vc_5.nativeElement,ctx);
      this._vc_5.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_6,ctx);
      cb(this._vc_7.nativeElement,ctx);
      this._vc_7.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_8,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 3)) { return new View_DataTableBodyComponent1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    if ((nodeIndex == 5)) { return new View_DataTableBodyComponent2(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    if ((nodeIndex == 7)) { return new View_DataTableBodyComponent4(this.viewUtils,this,7,this._anchor_7,this._vc_7); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'select')) {
      const pd_sub_0:any = ((<any>this.context.select.emit($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'activate')) {
      const pd_sub_1:any = ((<any>this.context.activate.emit($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}