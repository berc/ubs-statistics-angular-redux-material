{"version":3,"file":"layout-gap.js","sourceRoot":"","sources":["layout-gap.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective, LAYOUT_VALUES} from './layout';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n    OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n\n         set gap(val) {\n    this._cacheInput('gap', val);\n  }\n\n      set gapXs(val) {\n    this._cacheInput('gapXs', val);\n  }\n\n   set gapGtXs(val) {\n    this._cacheInput('gapGtXs', val);\n  };\n\n      set gapSm(val) {\n    this._cacheInput('gapSm', val);\n  };\n\n   set gapGtSm(val) {\n    this._cacheInput('gapGtSm', val);\n  };\n\n      set gapMd(val) {\n    this._cacheInput('gapMd', val);\n  };\n\n   set gapGtMd(val) {\n    this._cacheInput('gapGtMd', val);\n  };\n\n      set gapLg(val) {\n    this._cacheInput('gapLg', val);\n  };\n\n   set gapGtLg(val) {\n    this._cacheInput('gapGtLg', val);\n  };\n\n      set gapXl(val) {\n    this._cacheInput('gapXl', val);\n  };\n\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer,\n                container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    let onMutationCallback = (mutations) => {\n      let validatedChanges = (it: MutationRecord) => {\n        return (it.addedNodes && it.addedNodes.length) ||\n            (it.removedNodes && it.removedNodes.length);\n      };\n\n      // update gap styles only for child 'added' or 'removed' events\n      if (mutations.filter(validatedChanges).length) {\n        this._updateWithValue();\n      }\n    };\n\n    this._observer = new MutationObserver(onMutationCallback);\n    this._observer.observe(this._elementRef.nativeElement, {childList: true});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput(\"gap\") || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    let items = this.childrenNodes\n        .filter(el => (el.nodeType === 1))   // only Element types\n        .filter(el => this._getDisplayStyle(el) != \"none\");\n    let numItems = items.length;\n\n    if (numItems > 1) {\n      let lastItem = items[numItems - 1];\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      items = items.filter((el, j) => j < numItems - 1);\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case \"row\" :\n      case 'row-reverse':\n      default :\n        key = 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs],\n  [fxLayoutGap.gt-xs],\n  [fxLayoutGap.sm],\n  [fxLayoutGap.gt-sm]\n  [fxLayoutGap.md],\n  [fxLayoutGap.gt-md]\n  [fxLayoutGap.lg],\n  [fxLayoutGap.gt-lg],\n  [fxLayoutGap.xl]\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: ElementRef, },\n{type: Renderer, },\n{type: LayoutDirective, decorators: [{ type: Optional }, { type: Self }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'gap': [{ type: Input, args: ['fxLayoutGap', ] },],\n'gapXs': [{ type: Input, args: ['fxLayoutGap.xs', ] },],\n'gapGtXs': [{ type: Input, args: ['fxLayoutGap.gt-xs', ] },],\n'gapSm': [{ type: Input, args: ['fxLayoutGap.sm', ] },],\n'gapGtSm': [{ type: Input, args: ['fxLayoutGap.gt-sm', ] },],\n'gapMd': [{ type: Input, args: ['fxLayoutGap.md', ] },],\n'gapGtMd': [{ type: Input, args: ['fxLayoutGap.gt-md', ] },],\n'gapLg': [{ type: Input, args: ['fxLayoutGap.lg', ] },],\n'gapGtLg': [{ type: Input, args: ['fxLayoutGap.gt-lg', ] },],\n'gapXl': [{ type: Input, args: ['fxLayoutGap.xl', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}