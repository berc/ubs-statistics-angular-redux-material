{"version":3,"file":"hide.js","sourceRoot":"","sources":["hide.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n  Self,\n  Optional\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\n\n/**\n * 'show' Layout API directive\n *\n */\n\nexport class HideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n         set hide(val) {\n    this._cacheInput(\"hide\", val);\n  }\n\n      set hideXs(val) {\n    this._cacheInput('hideXs', val);\n  }\n\n   set hideGtXs(val) {\n    this._cacheInput('hideGtXs', val);\n  };\n\n      set hideSm(val) {\n    this._cacheInput('hideSm', val);\n  };\n\n   set hideGtSm(val) {\n    this._cacheInput('hideGtSm', val);\n  };\n\n      set hideMd(val) {\n    this._cacheInput('hideMd', val);\n  };\n\n   set hideGtMd(val) {\n    this._cacheInput('hideGtMd', val);\n  };\n\n      set hideLg(val) {\n    this._cacheInput('hideLg', val);\n  };\n\n   set hideGtLg(val) {\n    this._cacheInput('hideGtLg', val);\n  };\n\n      set hideXl(val) {\n    this._cacheInput('hideXl', val);\n  };\n\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n                protected _layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected renderer: Renderer) {\n    super(monitor, elRef, renderer);\n\n    /**\n     * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n     * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n     */\n    if (_layout) {\n      this._layoutWatcher = _layout.layout$.subscribe(() => this._updateWithValue());\n    }\n    this._display = this._getDisplayStyle(); // re-invoke override to use `this._layout`\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly defined.\n   */\n  protected _getDisplayStyle(): string {\n    return this._layout ? \"flex\" : super._getDisplayStyle();\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxHide')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['hide'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   * NOTE: fxHide has special fallback defaults.\n   *       - If the non-responsive fxHide=\"\" is specified we default to hide==true\n   *       - If the non-responsive fxHide is NOT specified, use default hide == false\n   *       This logic supports mixed usages with fxShow; e.g. `<div fxHide fxShow.gt-sm>`\n   */\n  ngOnInit() {\n    // If the attribute 'fxHide' is specified we default to hide==true, otherwise do nothing..\n    let value = (this._queryInput('hide') == \"\") ? true : this._getDefaultVal(\"hide\", false);\n\n    this._listenForMediaQueryChanges('hide', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the visibility value and then update the host's inline display style\n   */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal(\"hide\", false);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldHide = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldHide));\n  }\n\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   */\n  protected _buildCSS(value) {\n    return {'display': value ? 'none' : this._display};\n  }\n\n  /**\n   * Validate the value to NOT be FALSY\n   */\n  protected _validateTruthy(value) {\n    return FALSY.indexOf(value) === -1;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `\n  [fxHide],\n  [fxHide.xs],\n  [fxHide.gt-xs],\n  [fxHide.sm],\n  [fxHide.gt-sm],\n  [fxHide.md],\n  [fxHide.gt-md],\n  [fxHide.lg],\n  [fxHide.gt-lg],\n  [fxHide.xl]\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: LayoutDirective, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hide': [{ type: Input, args: ['fxHide', ] },],\n'hideXs': [{ type: Input, args: ['fxHide.xs', ] },],\n'hideGtXs': [{ type: Input, args: ['fxHide.gt-xs', ] },],\n'hideSm': [{ type: Input, args: ['fxHide.sm', ] },],\n'hideGtSm': [{ type: Input, args: ['fxHide.gt-sm', ] },],\n'hideMd': [{ type: Input, args: ['fxHide.md', ] },],\n'hideGtMd': [{ type: Input, args: ['fxHide.gt-md', ] },],\n'hideLg': [{ type: Input, args: ['fxHide.lg', ] },],\n'hideGtLg': [{ type: Input, args: ['fxHide.gt-lg', ] },],\n'hideXl': [{ type: Input, args: ['fxHide.xl', ] },],\n};\n}\n\n\nconst FALSY = ['false', false, 0];\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}