{"version":3,"file":"style.js","sourceRoot":"","sources":["style.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer,\n  OnChanges,\n  SimpleChanges,\n  KeyValueDiffers\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\n\nimport {BaseFxDirectiveAdapter} from './base-adapter';\nimport {BreakPointRegistry} from './../../media-query/breakpoints/break-point-registry';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/** NgStyle allowed inputs **/\nexport type NgStyleType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n\nexport class StyleDirective extends NgStyle implements OnInit, OnChanges, OnDestroy {\n\n  \n  set styleXs(val: NgStyleType) {\n    this._base.cacheInput('styleXs', val, true);\n  }\n\n  \n  set styleGtXs(val: NgStyleType) {\n    this._base.cacheInput('styleGtXs', val, true);\n  };\n\n  \n  set styleSm(val: NgStyleType) {\n    this._base.cacheInput('styleSm', val, true);\n  };\n\n  \n  set styleGtSm(val: NgStyleType) {\n    this._base.cacheInput('styleGtSm', val, true);\n  };\n\n  \n  set styleMd(val: NgStyleType) {\n    this._base.cacheInput('styleMd', val, true);\n  };\n\n  \n  set styleGtMd(val: NgStyleType) {\n    this._base.cacheInput('styleGtMd', val, true);\n  };\n\n  \n  set styleLg(val: NgStyleType) {\n    this._base.cacheInput('styleLg', val, true);\n  };\n\n  \n  set styleGtLg(val: NgStyleType) {\n    this._base.cacheInput('styleGtLg', val, true);\n  };\n\n  \n  set styleXl(val: NgStyleType) {\n    this._base.cacheInput('styleXl', val, true);\n  };\n\n  /**\n   *\n   */\n  constructor(private monitor: MediaMonitor,\n              private _bpRegistry: BreakPointRegistry,\n              _differs: KeyValueDiffers, _ngEl: ElementRef, _renderer: Renderer) {\n    super(_differs, _ngEl, _renderer);\n    this._base = new BaseFxDirectiveAdapter(monitor, _ngEl, _renderer);\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const changed = this._bpRegistry.items.some(it => `style${it.suffix}` in changes);\n    if (changed || this._base.mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._base.listenForMediaQueryChanges('style', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n  }\n\n  private _updateStyle(value?: NgStyleType) {\n    let style = value || this._base.queryInput(\"style\") || '';\n    if (this._base.mqActivation) {\n      style = this._base.mqActivation.activatedInput;\n    }\n    // Delegate subsequent activity to the NgStyle logic\n    this.ngStyle = style;\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  private _base: BaseFxDirectiveAdapter;\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `\n    [style.xs],\n    [style.gt-xs],\n    [style.sm],\n    [style.gt-sm],\n    [style.md],\n    [style.gt-md],\n    [style.lg],\n    [style.gt-lg],\n    [style.xl]\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: BreakPointRegistry, },\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'styleXs': [{ type: Input, args: ['style.xs', ] },],\n'styleGtXs': [{ type: Input, args: ['style.gt-xs', ] },],\n'styleSm': [{ type: Input, args: ['style.sm', ] },],\n'styleGtSm': [{ type: Input, args: ['style.gt-sm', ] },],\n'styleMd': [{ type: Input, args: ['style.md', ] },],\n'styleGtMd': [{ type: Input, args: ['style.gt-md', ] },],\n'styleLg': [{ type: Input, args: ['style.lg', ] },],\n'styleGtLg': [{ type: Input, args: ['style.gt-lg', ] },],\n'styleXl': [{ type: Input, args: ['style.xl', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}